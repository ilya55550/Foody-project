"""
Django settings for sitefoody project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG')

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'debug_toolbar',
    'rest_framework',
    'djoser',
    'rest_framework.authtoken',

    'foodapp',
    'foodapp_api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'sitefoody.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sitefoody.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'django_foody',
        'USER': 'foody',
        'PASSWORD': 'foody',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = []

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# smtp
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_PORT = config('EMAIL_PORT')
EMAIL_USE_SSL = config('EMAIL_USE_SSL')

INTERNAL_IPS = [
    "127.0.0.1",
]

# redis settings
REDIS_HOST = '0.0.0.0'
REDIS_PORT = '6379'
CELERY_BROKER_URL = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'
CELERY_BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 3600}
CELERY_RESULT_BACKEND = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',

    ),
}

# DJOSER = {
#     'SERIALIZERS': {
#         'activation': 'djoser.serializers.ActivationSerializer',
#         'password_reset': 'djoser.serializers.SendEmailResetSerializer',
#         'password_reset_confirm': 'djoser.serializers.PasswordResetConfirmSerializer',
#         'password_reset_confirm_retype': 'djoser.serializers.PasswordResetConfirmRetypeSerializer',
#         'set_password': 'djoser.serializers.SetPasswordSerializer',
#         'set_password_retype': 'djoser.serializers.SetPasswordRetypeSerializer',
#         'set_username': 'djoser.serializers.SetUsernameSerializer',
#         'set_username_retype': 'djoser.serializers.SetUsernameRetypeSerializer',
#         'username_reset': 'djoser.serializers.SendEmailResetSerializer',
#         'username_reset_confirm': 'djoser.serializers.UsernameResetConfirmSerializer',
#         'username_reset_confirm_retype': 'djoser.serializers.UsernameResetConfirmRetypeSerializer',
#         'user_create': 'djoser.serializers.UserCreateSerializer',
#         'user_create_password_retype': 'djoser.serializers.UserCreatePasswordRetypeSerializer',
#         'user_delete': 'djoser.serializers.UserDeleteSerializer',
#         'user': 'djoser.serializers.UserSerializer',
#         'current_user': 'djoser.serializers.UserSerializer',
#         'token': 'djoser.serializers.TokenSerializer',
#         'token_create': 'djoser.serializers.TokenCreateSerializer',
#     },
#     'PERMISSIONS': {
#         'activation': ['rest_framework.permissions.AllowAny'],
#         'password_reset': ['rest_framework.permissions.AllowAny'],
#         'password_reset_confirm': ['rest_framework.permissions.AllowAny'],
#         'set_password': ['rest_framework.permissions.CurrentUserOrAdmin'],
#         'username_reset': ['rest_framework.permissions.AllowAny'],
#         'username_reset_confirm': ['rest_framework.permissions.AllowAny'],
#         'set_username': ['rest_framework.permissions.CurrentUserOrAdmin'],
#         'user_create': ['rest_framework.permissions.AllowAny'],
#         'user_delete': ['rest_framework.permissions.CurrentUserOrAdmin'],
#         'user': ['rest_framework.permissions.CurrentUserOrAdmin'],
#         'user_list': ['rest_framework.permissions.CurrentUserOrAdmin'],
#         'token_create': ['rest_framework.permissions.AllowAny'],
#         'token_destroy': ['rest_framework.permissions.IsAuthenticated'],
#     }
# }
